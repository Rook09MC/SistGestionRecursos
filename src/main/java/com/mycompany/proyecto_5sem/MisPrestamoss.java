/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.proyecto_5sem;

import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Marvin Siles
 */
public class MisPrestamoss extends javax.swing.JPanel {

    /**
     * Creates new form MisPrestamoss
     */
    conexionMysql conecta = new conexionMysql();
    Connection cn = conecta.estableceConexion();

    private int idUsuario;
    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(MisPrestamoss.class);

    public MisPrestamoss(int idUsuario) {
        this.idUsuario = idUsuario;
        initComponents();

        logger.info("Inicializando MisPrestamoss para idUsuario: " + idUsuario);

        mostrarPrestamos();

        lblImagen.setIcon(cargarImagenEscalada("/valoracionesimg.png", 170, 170));
        lblImagen.setPreferredSize(new Dimension(170, 170));
        lblImagen.setHorizontalAlignment(SwingConstants.CENTER);
        lblImagen.setVerticalAlignment(SwingConstants.CENTER);

        logger.info("Imagen cargada y configurada en lblImagen.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Prestamos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPrestamos = new javax.swing.JTable();
        lblImagen = new javax.swing.JLabel();

        Prestamos.setBackground(new java.awt.Color(75, 99, 130));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("<html>MIS<br>PRESTAMOS </html>");

        tablaPrestamos.setBackground(new java.awt.Color(164, 181, 196));
        tablaPrestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPrestamos);

        javax.swing.GroupLayout PrestamosLayout = new javax.swing.GroupLayout(Prestamos);
        Prestamos.setLayout(PrestamosLayout);
        PrestamosLayout.setHorizontalGroup(
            PrestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrestamosLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(PrestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addGap(36, 36, 36))
        );
        PrestamosLayout.setVerticalGroup(
            PrestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrestamosLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(PrestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrestamosLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(PrestamosLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Prestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Prestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Prestamos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JTable tablaPrestamos;
    // End of variables declaration//GEN-END:variables
private void mostrarPrestamos() {
        logger.info("Iniciando método mostrarPrestamos para idUsuario: " + idUsuario);

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID Préstamo");
        modelo.addColumn("Usuario");
        modelo.addColumn("Equipo");
        modelo.addColumn("Fecha Préstamo");
        modelo.addColumn("Fecha Devolución Esperada");
        modelo.addColumn("Fecha Devolución Real");

        tablaPrestamos.setModel(modelo);

        String sql = "SELECT p.id_prestamo, u.nombre AS usuario, e.nombre AS equipo, "
                + "p.fecha_prestamo, p.fecha_devolucion_esperada, p.fecha_devolucion_real "
                + "FROM prestamos p "
                + "LEFT JOIN usuarios u ON p.id_usuario = u.id_usuario "
                + "LEFT JOIN equipos e ON p.id_equipo = e.id_equipo "
                + "WHERE p.id_usuario = ? "
                + "ORDER BY p.id_prestamo";

        try (PreparedStatement ps = cn.prepareStatement(sql)) {
            ps.setInt(1, idUsuario);
            ResultSet rs = ps.executeQuery();

            int contador = 0;
            while (rs.next()) {
                Object[] fila = new Object[6];
                fila[0] = rs.getInt("id_prestamo");
                fila[1] = rs.getString("usuario");
                fila[2] = rs.getString("equipo");
                fila[3] = rs.getTimestamp("fecha_prestamo");
                fila[4] = rs.getTimestamp("fecha_devolucion_esperada");
                fila[5] = rs.getTimestamp("fecha_devolucion_real");

                modelo.addRow(fila);
                contador++;
            }

            // Ocultar columna ID Préstamo
            TableColumnModel columnModel = tablaPrestamos.getColumnModel();
            TableColumn idPrestamoColumn = columnModel.getColumn(0);
            idPrestamoColumn.setMinWidth(0);
            idPrestamoColumn.setMaxWidth(0);
            idPrestamoColumn.setPreferredWidth(0);

            // Ocultar columna Usuario
            TableColumn usuarioColumn = columnModel.getColumn(1);
            usuarioColumn.setMinWidth(0);
            usuarioColumn.setMaxWidth(0);
            usuarioColumn.setPreferredWidth(0);

            logger.info("Se mostraron " + contador + " préstamos para el usuario con ID " + idUsuario);

        } catch (SQLException e) {
            logger.error("Error al mostrar préstamos para idUsuario: " + idUsuario, e);
            JOptionPane.showMessageDialog(this, "Error al mostrar préstamos: " + e.getMessage());
        }
    }

    public ImageIcon cargarImagenEscalada(String ruta, int ancho, int alto) {
        logger.info("Cargando imagen desde ruta: " + ruta + " con tamaño: " + ancho + "x" + alto);
        ImageIcon iconoOriginal = new ImageIcon(getClass().getResource(ruta));
        Image imagenOriginal = iconoOriginal.getImage();

        BufferedImage imagenEscalada = new BufferedImage(ancho, alto, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = imagenEscalada.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        g2d.drawImage(imagenOriginal, 0, 0, ancho, alto, null);
        g2d.dispose();

        logger.info("Imagen escalada creada correctamente.");
        return new ImageIcon(imagenEscalada);
    }
}
