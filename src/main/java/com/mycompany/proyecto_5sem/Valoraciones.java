/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.proyecto_5sem;

import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Hashtable;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Marvin Siles
 */
public class Valoraciones extends javax.swing.JPanel {

    /**
     * Creates new form Valoraciones
     */
    conexionMysql conecta = new conexionMysql();
    Connection cn = conecta.estableceConexion();
    private int idUsuario;
    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(Valoraciones.class);

    public Valoraciones(int idUsuario) {
        initComponents();
        logger.info("Inicializando componente Valoraciones para usuario ID: " + idUsuario);

        sliderPuntuacion.setMinimum(1);
        sliderPuntuacion.setMaximum(5);
        sliderPuntuacion.setValue(3); // Medio por defecto
        sliderPuntuacion.setMajorTickSpacing(1);
        sliderPuntuacion.setPaintTicks(true);
        sliderPuntuacion.setPaintLabels(true);

        // Personalizar el slider con emojis
        Hashtable<Integer, JLabel> labelTable = new Hashtable<>();
        labelTable.put(1, new JLabel(crearIconoEscalado("/puntu1.png", 32, 32)));
        labelTable.put(2, new JLabel(crearIconoEscalado("/puntu2.png", 32, 32)));
        labelTable.put(3, new JLabel(crearIconoEscalado("/puntu3.png", 32, 32)));
        labelTable.put(4, new JLabel(crearIconoEscalado("/puntu4.png", 32, 32)));
        labelTable.put(5, new JLabel(crearIconoEscalado("/puntu5.png", 32, 32)));

        sliderPuntuacion.setLabelTable(labelTable);

        this.idUsuario = idUsuario;

        try {
            cargarEquiposPrestados(idUsuario);
            logger.info("Equipos prestados cargados correctamente para usuario ID: " + idUsuario);
        } catch (Exception e) {
            logger.error("Error al cargar equipos prestados para usuario ID " + idUsuario + ": " + e.getMessage());
        }
    }

    private Icon crearIconoEscalado(String ruta, int ancho, int alto) {
        ImageIcon icon = new ImageIcon(getClass().getResource(ruta));
        Image imagen = icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
        return new ImageIcon(imagen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboEquipos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        sliderPuntuacion = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(75, 99, 130));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("valoraciones");

        comboEquipos.setBackground(new java.awt.Color(164, 181, 196));
        comboEquipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("EQUIPO");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Registra tu experiencia con nuestros equipos:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Comenta sobre el equipo seleccionado:");

        txtComentario.setBackground(new java.awt.Color(164, 181, 196));
        txtComentario.setColumns(20);
        txtComentario.setLineWrap(true);
        txtComentario.setRows(5);
        txtComentario.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtComentario);

        sliderPuntuacion.setBackground(new java.awt.Color(0, 51, 153));
        sliderPuntuacion.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Califica al equipo");

        jButton1.setBackground(new java.awt.Color(166, 136, 104));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REGISTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Selecciona uno de los equipos que adquiriste");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(355, 355, 355))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(215, 215, 215))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(sliderPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(194, 194, 194)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        jLabel3.getAccessibleContext().setAccessibleName("Registra tu experiencia con nuestros equipos");
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String comentario = txtComentario.getText();
        int puntuacion = sliderPuntuacion.getValue();
        String equipoSeleccionado = (String) comboEquipos.getSelectedItem();

        if (comentario.isEmpty() || equipoSeleccionado == null) {
            logger.warn("Intento de registrar valoración sin seleccionar equipo o sin comentario.");
            JOptionPane.showMessageDialog(null, "Debe seleccionar un equipo y escribir un comentario.");
            return;
        }

        try {
            int id_equipo = Integer.parseInt(equipoSeleccionado.split(" - ")[0]);
            logger.info("Registrando valoración para usuario ID: " + idUsuario + ", equipo ID: " + id_equipo + ", puntuación: " + puntuacion);

            String sqlInsert = "INSERT INTO valoraciones (id_usuario, id_equipo, comentario, puntuacion, fecha_valoracion) "
                    + "VALUES (?, ?, ?, ?, CURRENT_DATE)";

            PreparedStatement ps = cn.prepareStatement(sqlInsert);
            ps.setInt(1, idUsuario);  // Asegúrate de tener esta variable disponible
            ps.setInt(2, id_equipo);
            ps.setString(3, comentario);
            ps.setInt(4, puntuacion);

            ps.executeUpdate();

            logger.info("Valoración registrada correctamente para usuario ID: " + idUsuario);
            JOptionPane.showMessageDialog(null, "Valoración registrada correctamente.");
            txtComentario.setText("");
            sliderPuntuacion.setValue(3); // Valor medio por defecto

        } catch (SQLException e) {
            logger.error("Error al registrar valoración para usuario ID " + idUsuario + ": " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error al registrar valoración: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboEquipos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider sliderPuntuacion;
    private javax.swing.JTextArea txtComentario;
    // End of variables declaration//GEN-END:variables

    private void cargarEquiposPrestados(int id_usuario) {
        logger.info("Iniciando carga de equipos prestados para usuario ID: " + id_usuario);
        comboEquipos.removeAllItems();
        String sql = "SELECT e.id_equipo, e.nombre FROM prestamos p "
                + "JOIN equipos e ON p.id_equipo = e.id_equipo "
                + "WHERE p.id_usuario = ?";

        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setInt(1, id_usuario);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String item = rs.getInt("id_equipo") + " - " + rs.getString("nombre");
                comboEquipos.addItem(item);
                logger.info("Equipo cargado: " + item);
            }
            logger.info("Carga de equipos finalizada para usuario ID: " + id_usuario);
        } catch (SQLException e) {
            logger.error("Error al cargar equipos para usuario ID " + id_usuario + ": " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error al cargar equipos: " + e.getMessage());
        }
    }

}
